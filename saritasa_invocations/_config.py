import collections.abc
import dataclasses


@dataclasses.dataclass
class Config:
    """Settings for saritasa invocations."""

    # General settings
    project_name: str = ""

    # System settings
    settings_template: str = "config/settings/local.template.py"
    save_settings_from_template_to: str = "config/settings/local.py"
    vs_code_settings_template: str = ".vscode/recommended_settings.json"

    # Git settings
    merge_ff: str = "false"
    pull_ff: str = "only"

    # Pre-commit settings
    pre_commit_hooks: collections.abc.Sequence[str] = (
        "pre-commit",
        "pre-push",
        "commit-msg",
    )

    # Python settings
    python_entry: str = "python"
    python_docker_service: str = "web"
    python_docker_service_params: str = "--rm"

    # Docker settings
    docker_main_containers: collections.abc.Sequence[str] = (
        "postgres",
        "redis",
    )
    build_image_tag: str = ""
    buildpack_builder: str = "paketobuildpacks/builder:base"
    buildpack_runner: str = "paketobuildpacks/run:base"
    buildpack_requirements_path: str = "requirements"

    # GitHub actions settings
    github_action_hosts: collections.abc.Sequence[str] = tuple()

    # Django
    runserver_command: str = "runserver_plus"
    runserver_host: str = "0.0.0.0"
    runserver_port: str = "8000"
    runserver_params: str = ""
    runserver_docker_params: str = "--rm --service-ports"
    django_migrate_command: str = "migrate"
    default_superuser_email: str = "root@localhost"
    default_superuser_username: str = "root"
    default_superuser_password: str = "root"
    django_shell_command: str = "shell_plus --ipython"

    # Celery
    celery_service_name: str = "celery"
    celery_local_cmd: str = (
        "celery --app config.celery:app "
        "worker --beat --scheduler=django --loglevel=info"
    )

    # FastAPI
    fastapi_uvicorn_command: str = "-m uvicorn"
    fastapi_app: str = "config:fastapi_app"
    fastapi_host: str = "0.0.0.0"
    fastapi_port: str = "8000"
    fastapi_params: str = "--reload"
    fastapi_docker_params: str = "--rm --service-ports"

    # Alembic
    alembic_command: str = "-m alembic"
    alembic_migrations_folder: str = "db/migrations/versions"
    alembic_adjust_messages: collections.abc.Sequence[str] = (
        "# ### commands auto generated by Alembic - please adjust! ###",
        "# ### end Alembic commands ###",
    )

    def __post_init__(self) -> None:
        """Set default values for settings that are dependant on others."""
        if not self.build_image_tag:
            self.build_image_tag = self.project_name

        if not self.github_action_hosts:
            self.github_action_hosts = self.docker_main_containers
